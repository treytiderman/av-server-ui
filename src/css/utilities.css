/* Colors */
.dim {
  color: var(--color-text-dim);
}
.clear {
  background-color: transparent;
}
.dim {
  color: var(--color-text-dim);
}
.grey {
  color: var(--color-bg-grey);
}
.red {
  color: var(--color-bg-red);
}
.orange {
  color: var(--color-bg-orange);
}
.yellow {
  color: var(--color-bg-yellow);
}
.lime {
  color: var(--color-bg-lime);
}
.green {
  color: var(--color-bg-green);
}
.cyan {
  color: var(--color-bg-cyan);
}
.blue {
  color: var(--color-bg-blue);
}
.purple {
  color: var(--color-bg-purple);
}
.pink {
  color: var(--color-bg-pink);
}
button.dim {
  background-color: var(--color-bg-dim);
  color: var(--color-text-dim);
}
button.grey {
  background-color: var(--color-bg-grey);
  color: var(--color-text-grey);
}
button.red {
  background-color: var(--color-bg-red);
  color: var(--color-text-red);
}
button.orange {
  background-color: var(--color-bg-orange);
  color: var(--color-text-orange);
}
button.yellow {
  background-color: var(--color-bg-yellow);
  color: var(--color-text-yellow);
}
button.lime {
  background-color: var(--color-bg-lime);
  color: var(--color-text-lime);
}
button.green {
  background-color: var(--color-bg-green);
  color: var(--color-text-green);
}
button.cyan {
  background-color: var(--color-bg-cyan);
  color: var(--color-text-cyan);
}
button.blue {
  background-color: var(--color-bg-blue);
  color: var(--color-text-blue);
}
button.purple {
  background-color: var(--color-bg-purple);
  color: var(--color-text-purple);
}
button.pink {
  background-color: var(--color-bg-pink);
  color: var(--color-text-pink);
}

/* Flex */
.flex {
  display: flex;
  gap: var(--gap);
  flex-wrap: wrap;
}
button.flex {
  align-items: center;
  gap: var(--pad);
}
.flex.nowrap {
  flex-wrap: nowrap;
}

.flex.even > * {
  flex: 1 0 0%;
}

.flex.column {
  flex-direction: column;
  overflow-y: auto;
  flex-wrap: nowrap;
}

.flex.grow   { flex: 100 0 0%; }
.flex.grow-1 { flex: 1 0 0%; }
.flex.grow-2 { flex: 2 0 0%; }
.flex.grow-3 { flex: 3 0 0%; }

/* Wrap to one element per line at break point */
@media (max-width: 34rem) {
  .flex.break-md > * { flex: 0 1 100% !important; }
}
@media (max-width: 60rem) {
  .flex.break-lg > * { flex: 0 1 100% !important; }
}
@media (max-width: 80rem) {
  .flex.break-xl > * { flex: 0 1 100% !important; }
}

/* Grid */
.grid {
  display: grid;
  align-content: flex-start;
  gap: var(--gap);
}

.grid.center { place-items: center; }

.grid.auto-xs { grid-template-columns: repeat(auto-fit, minmax(min(10rem, 100%), 1fr)); }
.grid.auto-sm { grid-template-columns: repeat(auto-fit, minmax(min(16rem, 100%), 1fr)); }
.grid.auto-md { grid-template-columns: repeat(auto-fit, minmax(min(24rem, 100%), 1fr)); }
.grid.auto-lg { grid-template-columns: repeat(auto-fit, minmax(min(36rem, 100%), 1fr)); }

/* Spacing for both Flex and Grid */
.gap      { gap: var(--gap); }
.gap-pad  { gap: var(--pad); }
.gap-0    { gap: 0; }

/* Alignment for both Flex and Grid */
.align-end             { align-items: flex-end; }
.align-start           { align-items: flex-start; }
.align-center          { align-items: center; }
.align-stretch         { align-items: stretch; }
.justify-end           { justify-content: flex-end; }
.justify-start         { justify-content: flex-start; }
.justify-center        { justify-content: center; }
.justify-space-around  { justify-content: space-around; }
.justify-space-evenly  { justify-content: space-evenly; }
.justify-space-between { justify-content: space-between; }

/* Misc */
.fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.resize {
  resize: both;
  overflow: auto;
}
.hide { display: none; }
.invisible { visibility: hidden; }
.overflow { overflow: auto; }
.fill { width: 100%; }
.mono { font-family: var(--font-mono); }
.error {
  box-shadow: inset 0px 0px 0px 2px var(--color-bg-red);
}
.error-message {
  margin-top: var(--pad);
  gap: var(--pad);
  color: var(--color-bg-red);
}